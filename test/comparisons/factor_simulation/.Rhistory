str_sub(
paste(str_c("x_", i, "_", 1:nitem, " + "), collapse = ""),
end = -3),
"\n ")
}
model <- paste(model, collapse = "")
return(model)
}
gen_model(nfact_vec[1], nitem_vec[1], 0.5, 0.5)
cat(gen_model(nfact_vec[1], nitem_vec[1], 0.5, 0.5))
for(nfact in nfact_vec){
for(nitem in nitem_vec)
models <- c(models, gen_model(nfact, nitem, 0.5, 0.5))
}
models <- c()
gen_model <- function(nfact, nitem, mean_load, sd_load){
model <- c()
for(i in 1:nfact){
model[i] <-
str_c(
"f",
i,
"=~",
str_sub(
paste(str_c("x_", i, "_", 1:nitem, " + "), collapse = ""),
end = -3),
"\n ")
}
model <- paste(model, collapse = "")
return(model)
}
for(nfact in nfact_vec){
for(nitem in nitem_vec)
models <- c(models, gen_model(nfact, nitem, 0.5, 0.5))
}
models
cat(models)
for(nfact in nfact_vec){
for(nitem in nitem_vec)
models <- c(models, gen_model(nfact, nitem, 0.5, 0.1))
}
models
models <- c()
gen_model <- function(nfact, nitem, mean_load, sd_load){
model <- c()
for(i in 1:nfact){
load <- rnorm(nitem, mean_load, sd_load)
model[i] <-
str_c(
"f",
i,
"=~",
str_sub(
paste(str_c(load, "*x_", i, "_", 1:nitem, " + "), collapse = ""),
end = -3),
"\n ")
}
model <- paste(model, collapse = "")
return(model)
}
for(nfact in nfact_vec){
for(nitem in nitem_vec)
models <- c(models, gen_model(nfact, nitem, 0.5, 0.1))
}
models
cat(models[1])
for(nfact in nfact_vec){
for(nitem in nitem_vec)
models <- c(models, gen_model(nfact, nitem, 0.5, 0.2))
}
cat(models[1])
models <- c()
gen_model <- function(nfact, nitem, mean_load, sd_load){
model <- c()
for(i in 1:nfact){
load <- rnorm(nitem, mean_load, sd_load)
model[i] <-
str_c(
"f",
i,
"=~",
str_sub(
paste(str_c(load, "*x_", i, "_", 1:nitem, " + "), collapse = ""),
end = -3),
"\n ")
}
model <- paste(model, collapse = "")
return(model)
}
for(nfact in nfact_vec){
for(nitem in nitem_vec)
models <- c(models, gen_model(nfact, nitem, 0.5, 0.2))
}
models
map2_chr(nfact_vec, nitem_vec, ~gen_model(.x, .y, 0.5, 0.2))
pacman::p_load(lavaan, tidyverse)
map2_chr(nfact_vec, nitem_vec, ~gen_model(.x, .y, 0.5, 0.2))
expand_grid(nfact_vec, nitem_vec)
pmap_chr(expand_grid(nfact_vec, nitem_vec), ~gen_model(.x, .y, 0.5, 0.2))
models <- pmap_chr(expand_grid(nfact_vec, nitem_vec), ~gen_model(.x, .y, 0.5, 0.2))
models <- pmap_chr(
expand_grid(nfact_vec, nitem_vec),
~gen_model(.x, .y, 0.5, 0.2))
models[1] %>% cat()
simulateData(models[1])
?simulateData
data = map(models, ~simulateData(.x, sample.nobs = 5000))
length(data)
data <- expand_grid(nfact_vec, nitem_vec)
models <- pmap_chr(
data,
~gen_model(.x, .y, 0.5, 0.2))
results <- expand_grid(nfact_vec, nitem_vec)
results <- mutate(
model =
pmap_chr(results,
~gen_model(.x, .y, 0.5, 0.2)))
results <- expand_grid(nfact_vec, nitem_vec)
results <- mutate(
model =
pmap_chr(results,
~gen_model(.x, .y, 0.5, 0.2)))
results <- mutate(
results,
model =
pmap_chr(results,
~gen_model(.x, .y, 0.5, 0.2)))
results <- mutate(
results,
data = map(model, ~simulateData(.x, sample.nobs = 5000)))
results
?walk
pwalk(results,
~with(
list(...),
arrow::write_arrow(
data,
str_c(
"C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/",
"nfact_",
nfact_vec,
"_nitem_",
nitem_vec,
".arrow")
)
)
)
pwalk(results,
~with(
list(...),
arrow::write_arrow(
data,
str_c(
"C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/",
"nfact_",
nfact_vec,
"_nitem_",
nitem_vec,
".arrow")
)
)
)
arrow::write_arrow(results, "C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/results.arrow")
results <- mutate(
results,
lav_fit = map2(model, data, ~cfa(.x, .y))
)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
pacman::p_load(lavaan, tidyverse, arrow)
nfact_vec <- c(3, 5)
nitem_vec <- c(5, 10, 20, 48)
results <- expand_grid(nfact_vec, nitem_vec)
write_csv2(results, "config_factor.csv")
nobs <- c(5000)
nfact_vec <- c(3, 5)
nitem_vec <- c(5, 10, 20, 48)
nobs <- c(5000)
results <- expand_grid(nfact_vec, nitem_vec, nobs)
?expand_grid
pacman::p_load(stringr)
gen_model <- function(nfact, nitem, mean_load, sd_load){
model <- c()
for(i in 1:nfact){
load <- rnorm(nitem, mean_load, sd_load)
model[i] <-
str_c(
"f",
i,
"=~",
str_sub(
paste(str_c(load, "*x_", i, "_", 1:nitem, " + "), collapse = ""),
end = -3),
"\n ")
}
model <- paste(model, collapse = "")
return(model)
}
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
nfact_vec <- c(3, 5)
nitem_vec <- c(5, 10, 20, 48)
nobs <- c(5000)
config <- tidyr::expand_grid(nfact_vec, nitem_vec, nobs)
write_csv2(config, "config_factor.csv")
?write_csv2
??write_csv2
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
nfact_vec <- c(3, 5)
nitem_vec <- c(5, 10, 20, 48)
nobs <- c(5000)
config <- tidyr::expand_grid(nfact_vec, nitem_vec, nobs)
readr::write_csv2(config, "config_factor.csv")
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
nfact_vec <- c(3, 5)
nitem_vec <- c(5, 10, 20, 48)
nobs <- c(5000)
config <- tidyr::expand_grid(nfact_vec, nitem_vec, nobs)
readr::write_csv2(config, "config_factor.csv")
pacman::p_load(lavaan, tidyverse, arrow)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
config <- read_csv2("config_factor.csv")
include("factor_functions.R")
source("factor_functions.R")
results <- config
results <- mutate(
results,
model = pmap_chr(results,  ~gen_model(.x, .y, 0.5, 0.2)))
results <- mutate(
results,
data = map(model, ~simulateData(.x, sample.nobs = 5000)))
pwalk(results,
~with(
list(...),
arrow::write_arrow(
data,
str_c(
"data/",
"nfact_",
nfact_vec,
"_nitem_",
nitem_vec,
".arrow")
)
)
)
write_rds(results, "data.rds")
data <- readr::read_rds("data.rds")
pacman::p_load(lavaan, microbenchmark)
microbenchmark(cfa(data$model[1], data$data[[1]]))
res <- microbenchmark(cfa(data$model[1], data$data[[1]]))
View(res)
mean(res$time)
res <- summary(microbenchmark(cfa(data$model[1], data$data[[1]])))
View(res)
res$min
res$min[1]
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
nfact_vec <- c(3, 5)
nitem_vec <- c(5, 10, 20)#, 48)
nobs <- c(5000)
config <- tidyr::expand_grid(nfact_vec, nitem_vec, nobs)
readr::write_csv2(config, "config_factor.csv")
pacman::p_load(lavaan, tidyverse, arrow)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
config <- read_csv2("config_factor.csv")
source("factor_functions.R")
results <- config
results <- mutate(
results,
model = pmap_chr(results,  ~gen_model(.x, .y, 0.5, 0.2)))
results <- mutate(
results,
data = map(model, ~simulateData(.x, sample.nobs = 5000)))
pwalk(results,
~with(
list(...),
arrow::write_arrow(
data,
str_c(
"data/",
"nfact_",
nfact_vec,
"_nitem_",
nitem_vec,
".arrow")
)
)
)
write_rds(results, "data.rds")
pacman::p_load(lavaan, microbenchmark)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
data <- readr::read_rds("data.rds")
data
?microbenchmark
pmap(data, ~with(list(...), microbenchmark(cfa(model, data), times = 1)))
benchmarks <-
pmap_dfr(data,
~with(
list(...),
microbenchmark(cfa(model, data), times = 1)))
benchmarks
benchmarks <-
pmap_dfr(data,
~with(
list(...),
summary(microbenchmark(cfa(model, data), times = 1))))
benchmarks
data
benchmarks
benchmarks <-
bind_cols(
select(data, -c(model, data)),
select(benchmarks, -c(expr)))
benchmarks
readr::write_csv2(benchmarks, "benchmarks/benchmarks_lavaan.csv")
pacman::p_load(lavaan, microbenchmark)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
data <- readr::read_rds("data.rds")
benchmarks <-
pmap_dfr(data,
~with(
list(...),
summary(microbenchmark(cfa(model, data), times = 20))))
benchmarks <-
bind_cols(
select(data, -c(model, data)),
select(benchmarks, -c(expr)))
readr::write_csv2(benchmarks, "benchmarks/benchmarks_lavaan.csv")
pacman::p_load(lavaan, microbenchmark)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
data <- readr::read_rds("data.rds")
benchmarks <-
pmap_dfr(data,
~with(
list(...),
summary(microbenchmark(cfa(model, data), times = 20))))
benchmarks <-
dplyr::bind_cols(
select(data, -c(model, data)),
select(benchmarks, -c(expr)))
readr::write_csv2(benchmarks, "benchmarks/benchmarks_lavaan.csv")
pacman::p_load(lavaan, microbenchmark, dplyr)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
data <- readr::read_rds("data.rds")
benchmarks <-
pmap_dfr(data,
~with(
list(...),
summary(microbenchmark(cfa(model, data), times = 20))))
benchmarks <-
dplyr::bind_cols(
select(data, -c(model, data)),
select(benchmarks, -c(expr)))
readr::write_csv2(benchmarks, "benchmarks/benchmarks_lavaan.csv")
pacman::p_load(lavaan, microbenchmark, dplyr)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
data <- readr::read_rds("data.rds")
benchmarks <-
purrr::pmap_dfr(data,
~with(
list(...),
summary(microbenchmark(cfa(model, data), times = 20))))
benchmarks <-
bind_cols(
select(data, -c(model, data)),
select(benchmarks, -c(expr)))
readr::write_csv2(benchmarks, "benchmarks/benchmarks_lavaan.csv")
benchmarks <-
purrr::pmap_dfr(data,
~with(
list(...),
summary(microbenchmark(cfa(model, data), times = 2))))
benchmarks <-
bind_cols(
select(data, -c(model, data)),
select(benchmarks, -c(expr)))
readr::write_csv2(benchmarks, "benchmarks/benchmarks_lavaan.csv")
readr::write_csv2(benchmarks, "benchmarks/benchmarks_lavaan.csv")
pacman::p_load(lavaan, tidyverse, arrow)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
config <- read_csv2("config_factor.csv")
source("factor_functions.R")
results <- config
results <- mutate(
results,
model = pmap_chr(results,  ~gen_model(.x, .y, 0.5, 0.2)))
results <- mutate(
results,
data = map(model, ~simulateData(.x, sample.nobs = 5000)))
results <- mutate(
results,
model = pmap_chr(results,  ~gen_model_wol(.x, .y, 0.5, 0.2)))
pwalk(results,
~with(
list(...),
arrow::write_arrow(
data,
str_c(
"data/",
"nfact_",
nfact_vec,
"_nitem_",
nitem_vec,
".arrow")
)
)
)
write_rds(results, "data.rds")
data <- readr::read_rds("data.rds")
data
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
pacman::p_load(lavaan, microbenchmark, dplyr)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
data <- readr::read_rds("data.rds")
benchmarks <-
purrr::pmap_dfr(data,
~with(
list(...),
summary(microbenchmark(cfa(model, data), times = 20))))
benchmarks <-
bind_cols(
select(data, -c(model, data)),
select(benchmarks, -c(expr)))
readr::write_csv2(benchmarks, "benchmarks/benchmarks_lavaan.csv")
pacman::p_load(lavaan, microbenchmark, dplyr)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
data <- readr::read_rds("data.rds")
benchmarks <-
purrr::pmap_dfr(data,
~with(
list(...),
summary(microbenchmark(cfa(model, data), times = 2))))
benchmarks <-
bind_cols(
select(data, -c(model, data)),
select(benchmarks, -c(expr)))
readr::write_csv2(benchmarks, "benchmarks/benchmarks_lavaan.csv")
pacman::p_load(lavaan, tidyverse, arrow)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
config <- read_csv2("config_factor.csv")
source("factor_functions.R")
results <- config
results <- mutate(
results,
model = pmap_chr(results,  ~gen_model(.x, .y, 0.5, 0.2)))
results <- mutate(
results,
data = map(model, ~simulateData(.x, sample.nobs = 5000)))
results <- mutate(
results,
model = pmap_chr(results,  ~gen_model_wol(.x, .y, 0.5, 0.2)))
pwalk(results,
~with(
list(...),
arrow::write_arrow(
data,
str_c(
"data/",
"nfact_",
nfact_vec,
"_nitem_",
nitem_vec,
".arrow")
)
)
)
write_rds(results, "data.rds")
data
pacman::p_load(lavaan, microbenchmark, dplyr)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
data <- readr::read_rds("data.rds")
benchmarks <-
purrr::pmap_dfr(data,
~with(
list(...),
summary(microbenchmark(cfa(model, data), times = 2))))
benchmarks <-
bind_cols(
select(data, -c(model, data)),
select(benchmarks, -c(expr)))
readr::write_csv2(benchmarks, "benchmarks/benchmarks_lavaan.csv")
pacman::p_load(lavaan, tidyverse, arrow)
setwd("C:/Users/maxim/.julia/dev/sem/test/comparisons/factor_simulation/")
config <- read_csv2("config_factor.csv")
source("factor_functions.R")
results <- config
results <- mutate(
results,
model = pmap_chr(results,  ~gen_model(.x, .y, 0.5, 0.2)))
results <- mutate(
results,
data = map(model, ~simulateData(.x, sample.nobs = 5000)))
results <- mutate(
results,
model = pmap_chr(results,  ~gen_model_wol(.x, .y)))
pwalk(results,
~with(
list(...),
arrow::write_arrow(
data,
str_c(
"data/",
"nfact_",
nfact_vec,
"_nitem_",
nitem_vec,
".arrow")
)
)
)
write_rds(results, "data.rds")
data
results
